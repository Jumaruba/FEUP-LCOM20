#include <stdarg.h> // va_* macros are defined here
#include <stdint.h>
#include <stdio.h>
#include <minix/driver.h>
#include <lcom/lcf.h>
#include <sys/mman.h>
#include <stdio.h>
#include "sprite.h"

/** Creates a new sprite with pixmap "pic", with specified
* position (within the screen limits) and speed;
* Does not draw the sprite on the screen
* Returns NULL on invalid pixmap.
*/
Sprite *create_sprite(xpm_map_t xpm, int x, int y,int xspeed, int yspeed) {
    //allocate space for the "object"
    Sprite *sp = (Sprite *) malloc ( sizeof(Sprite));
    if( sp == NULL )
    return NULL;

    // read the sprite pixmap
    xpm_image_t img;
    sp->map = xpm_load(xpm, XPM_INDEXED, &img); 
    
    sp->x = x; 
    sp->y = y; 
    sp->xspeed= xspeed; 
    sp->yspeed= yspeed;

    sp->width = img.width;
    sp->height= img.height;

     

    if( sp->map == NULL ) {
    free(sp);
    return NULL;
    }


    return sp;
}

void destroy_sprite(Sprite *sp) {
    if( sp == NULL )
    return;
    
    if( sp ->map )
        free(sp->map);
    
    free(sp);
    sp = NULL; // XXX: pointer is passed by value
    // should do this @ the caller
}

/**
int animate_sprite(Sprite *sp) {
...
}
// Some useful non-visible functions 
static int draw_sprite(Sprite *sp, char *base) {
...
}
static int check_collision(Sprite *sp, char *base) {
...
}
**/
